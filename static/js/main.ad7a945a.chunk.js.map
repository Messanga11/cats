{"version":3,"sources":["components/Card/Card.js","components/CatInfo/CatInfo.js","components/CardList/CardList.js","components/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","className","onClick","this","props","handleClick","src","monster","id","alt","name","email","React","Component","CardInfo","CardList","setState","showModal","monsterToShow","state","monsters","map","Search","placeholder","handleChange","type","onChange","App","searchField","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","style","textAlign","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAsBeA,E,kDAlBb,aAAe,wC,0CAIf,WACE,OACE,sBAAKC,UAAU,OAAOC,QAASC,KAAKC,MAAMC,YAA1C,UACE,qBACEC,IAAG,+BAA0BH,KAAKC,MAAMG,QAAQC,GAA7C,0BACHC,IAAI,YAEN,6BAAKN,KAAKC,MAAMG,QAAQG,OACxB,4BAAIP,KAAKC,MAAMG,QAAQI,e,GAbZC,IAAMC,WCkBVC,G,wDAlBb,aAAe,wC,0CAIf,WACE,IAAQP,EAAYJ,KAAKC,MAAjBG,QACR,OACE,sBAAKN,UAAU,YAAf,UACE,qBACEK,IAAG,+BAA0BC,EAAQC,GAAlC,0BACHC,IAAI,QAEN,gD,GAbeG,IAAMC,YCsCdE,G,wDAlCb,aAAe,IAAD,8BACZ,gBAOFV,YAAc,SAACE,GAAD,OACZ,EAAKS,SAAS,CAAEC,WAAW,EAAMC,cAAeX,KAPhD,EAAKY,MAAQ,CACXD,cAAe,GACfD,WAAW,GAJD,E,0CAWd,WAAU,IAAD,OACP,OACE,mCACE,sBAAKhB,UAAU,OAAf,UACGE,KAAKC,MAAMgB,SAASC,KAAI,SAACd,GAAD,OACvB,cAAC,EAAD,CAEEA,QAASA,EACTF,YAAa,kBAAM,EAAKA,YAAYE,KAF/BA,EAAQC,OAKhBL,KAAKgB,MAAMF,WACV,sBAAKhB,UAAU,QAAf,UACE,mBAAGC,QAAS,kBAAM,EAAKc,SAAS,CAAEC,WAAW,KAA7C,mBACA,cAAC,EAAD,CAAUV,QAASJ,KAAKgB,MAAMD,4B,GA1BrBN,IAAMC,YCKdS,G,MARA,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACb,uBACEvB,UAAU,eACVwB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCCG,E,kDAjCb,aAAe,IAAD,8BACZ,gBACKR,MAAQ,CACXC,SAAU,GACVQ,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKjB,SAAS,CAAEI,SAAUa,S,oBAG/C,WAAU,IAAD,OACP,EAAkC9B,KAAKgB,MAA/BC,EAAR,EAAQA,SAAUQ,EAAlB,EAAkBA,YACZM,EAAmBd,EAASe,QAAO,SAAC5B,GAAD,OACvCA,EAAQG,KAAK0B,cAAcC,SAAST,EAAYQ,kBAGlD,OACE,qCACE,oBAAIE,MAAO,CAAEC,UAAW,UAAxB,0BACA,cAAC,EAAD,CACEhB,YAAY,kBACZC,aAAc,SAACgB,GAAD,OAAO,EAAKxB,SAAS,CAAEY,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUtB,SAAUc,W,GA5BVtB,IAAMC,WCOT8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad7a945a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nclass Card extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\" onClick={this.props.handleClick}>\r\n        <img\r\n          src={`https://robohash.org/${this.props.monster.id}?set=set4&size=180x180`}\r\n          alt=\"monster\"\r\n        />\r\n        <h2>{this.props.monster.name}</h2>\r\n        <p>{this.props.monster.email}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./CatInfo.css\";\r\nclass CardInfo extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    const { monster } = this.props;\r\n    return (\r\n      <div className=\"card-info\">\r\n        <img\r\n          src={`https://robohash.org/${monster.id}?set=set4&size=512x512`}\r\n          alt=\"cat\"\r\n        />\r\n        <button>Buy</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardInfo;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport CardInfo from \"../CatInfo/CatInfo\";\r\nimport \"./CardList.css\";\r\n\r\nclass CardList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsterToShow: {},\r\n      showModal: false,\r\n    };\r\n  }\r\n\r\n  handleClick = (monster) =>\r\n    this.setState({ showModal: true, monsterToShow: monster });\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"grid\">\r\n          {this.props.monsters.map((monster) => (\r\n            <Card\r\n              key={monster.id}\r\n              monster={monster}\r\n              handleClick={() => this.handleClick(monster)}\r\n            />\r\n          ))}\r\n          {this.state.showModal && (\r\n            <div className=\"modal\">\r\n              <p onClick={() => this.setState({ showModal: false })}>Close</p>\r\n              <CardInfo monster={this.state.monsterToShow} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardList;\r\n","import \"./Search.css\";\r\n\r\nconst Search = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search-input\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\nexport default Search;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/CardList/CardList\";\nimport Search from \"./components/Search/Search\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <>\n        <h1 style={{ textAlign: \"center\" }}>Amazing Cats</h1>\n        <Search\n          placeholder=\"Search a cat...\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filteredMonsters} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}